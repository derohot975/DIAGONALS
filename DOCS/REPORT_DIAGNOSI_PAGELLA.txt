# REPORT DIAGNOSI PAGELLA — VISIBILITÀ TRA UTENTI
Data: Fri Sep 19 15:15:19 CEST 2025

## Osservazioni Grep Client (posizioni file):

handlers/uiHandlers.ts:6:type Screen = 'auth' | 'home' | 'admin' | 'events' | 'adminEvents' | 'eventDetails' | 'eventResults' | 'voting' | 'historicEvents' | 'pagella';

handlers/eventHandlers.ts:6:type Screen = 'auth' | 'home' | 'admin' | 'events' | 'adminEvents' | 'eventDetails' | 'eventResults' | 'voting' | 'historicEvents' | 'pagella';
handlers/eventHandlers.ts:32:  deps.setCurrentScreen('pagella');

components/screens/PagellaScreen.tsx:19:    localStorage.setItem(`pagella_${event.id}`, content);
components/screens/PagellaScreen.tsx:30:    const saved = localStorage.getItem(`pagella_${event.id}`);
components/screens/PagellaScreen.tsx:45:        <h2 className="pagellone-tommy-font text-xl font-bold text-yellow-200">
components/screens/PagellaScreen.tsx:46:          Pagellone di Tommy

components/ScreenRouter.tsx:14:type Screen = 'auth' | 'home' | 'admin' | 'events' | 'adminEvents' | 'eventDetails' | 'eventResults' | 'voting' | 'historicEvents' | 'pagella';
components/ScreenRouter.tsx:212:    case 'pagella':

App.tsx:37:type Screen = 'auth' | 'home' | 'admin' | 'events' | 'adminEvents' | 'eventDetails' | 'eventResults' | 'voting' | 'historicEvents' | 'pagella';
App.tsx:44:const DATA_HEAVY_SCREENS: Screen[] = ['events', 'adminEvents', 'eventDetails', 'eventResults', 'voting', 'historicEvents', 'pagella', 'admin'];

index.css:270:/* Pagellone Tommy font */
index.css:271:.pagellone-tommy-font {

## Uso localStorage (se presente => contenuto NON condiviso):

components/screens/PagellaScreen.tsx:19:    localStorage.setItem(`pagella_${event.id}`, content);
components/screens/PagellaScreen.tsx:30:    const saved = localStorage.getItem(`pagella_${event.id}`);

## Handler di salvataggio lato client:

NESSUN RISULTATO - Non esistono chiamate fetch/axios per salvare la pagella sul server

## Endpoint lato server (rotte/controlli):

NESSUN RISULTATO - Non esistono endpoint server per la pagella

## Schema DB potenzialmente rilevante:

NESSUN RISULTATO - Non esistono colonne DB per salvare il contenuto della pagella

## Layer API client (/api/... pagella/notes):

NESSUN RISULTATO - Non esistono chiamate API per la pagella

## Permessi/guardie (isAdmin/isOwner/requireAuth) su rotte pagella/notes:

NESSUN RISULTATO - Non esistono controlli permessi perché non ci sono endpoint

## Conclusioni automatiche (euristiche):

- ✅ TROVATO localStorage per pagella: CONFERMATO contenuto locale NON condiviso
- ❌ NON esistono endpoint GET pubblici per l'evento: gli altri utenti NON possono leggere
- ❌ NON esiste nessun endpoint server: la pagella è completamente locale

## DIAGNOSI PROBLEMA IDENTIFICATO:

🚨 **PROBLEMA CRITICO**: La funzionalità "Pagellone di Tommy" è completamente implementata solo lato client con localStorage, rendendo il contenuto:

1. **NON CONDIVISO**: Ogni utente vede solo la propria versione locale
2. **NON PERSISTENTE**: Il contenuto si perde se si cambia browser/dispositivo
3. **NON SINCRONIZZATO**: Non c'è modo di condividere le note tra utenti

## EVIDENZE TECNICHE:

### Client-side (PRESENTE):
- ✅ Screen 'pagella' definita in tutti i router
- ✅ PagellaScreen.tsx implementata
- ✅ handleSave() salva solo in localStorage
- ✅ useEffect carica solo da localStorage
- ✅ UI completa con textarea e pulsante salva

### Server-side (ASSENTE):
- ❌ Nessun endpoint GET /api/events/:id/pagella
- ❌ Nessun endpoint PUT /api/events/:id/pagella  
- ❌ Nessuna colonna DB per salvare il contenuto
- ❌ Nessun schema per la pagella nel database
- ❌ Nessun controllo permessi implementato

>>> PROSSIMO PASSO (da confermare):

**SOLUZIONE RACCOMANDATA**:

1. **Aggiungere colonna DB**: 
   - `pagella_content TEXT` nella tabella `wineEvents`
   - Oppure tabella separata `event_pagella` con foreign key

2. **Implementare API server**:
   - GET /api/events/:id/pagella (lettura pubblica per tutti gli utenti autenticati)
   - PUT /api/events/:id/pagella (scrittura solo per admin/owner evento)

3. **Modificare client**:
   - Sostituire localStorage con chiamate API
   - Mantenere localStorage come cache/backup
   - Aggiungere sincronizzazione automatica

4. **Controlli permessi**:
   - Lettura: tutti gli utenti autenticati
   - Scrittura: solo admin o creatore evento
   - Versioning opzionale per evitare conflitti

**IMPATTO STIMATO**: 
- Sviluppo: ~2-4 ore
- Rischio: BASSO (solo aggiunta funzionalità)
- Beneficio: ALTO (condivisione reale del pagellone)
