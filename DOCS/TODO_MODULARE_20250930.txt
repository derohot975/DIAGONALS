# TODO MODULARE DIAGONALE - MICRO-TASK ≤15'
# Data: 30 Settembre 2025
# Lista task incrementali per migliorare modularità screens

## 🔥 PRIORITÀ ALTA - AdminEventManagementScreen

### Task 1: Estrarre ParticipantsManager (15')
- [ ] Creare `components/admin/ParticipantsManager.tsx`
- [ ] Spostare logica righe 25-108 da AdminEventManagementScreen
- [ ] Aggiornare import in AdminEventManagementScreen
- [ ] Test: Verifica gestione partecipanti funziona

### Task 2: Estrarre VotingCompletionChecker (15')  
- [ ] Creare `components/admin/VotingCompletionChecker.tsx`
- [ ] Spostare logica righe 127-170 da AdminEventManagementScreen
- [ ] Aggiornare import in AdminEventManagementScreen
- [ ] Test: Verifica status votazioni real-time

### Task 3: Creare hook business logic (15')
- [ ] Creare `hooks/useAdminEventManagement.ts`
- [ ] Estrarre logiche: getParticipantsCount, filtering events
- [ ] Spostare state management locale
- [ ] Aggiornare AdminEventManagementScreen per usare hook

### Task 4: Estrarre EventCard component (15')
- [ ] Creare `components/admin/EventCard.tsx`
- [ ] Spostare rendering singolo evento (righe 206-272)
- [ ] Parametrizzare props e handlers
- [ ] Test: Verifica azioni evento (edit, delete, voting)

### Task 5: Estrarre EventActions component (10')
- [ ] Creare `components/admin/EventActions.tsx`  
- [ ] Spostare pulsanti azioni (righe 235-253)
- [ ] Centralizzare logica condizionale voting status
- [ ] Test: Verifica attivazione/sospensione votazioni

### Task 6: Cleanup AdminEventManagementScreen (10')
- [ ] Rimuovere codice estratto
- [ ] Ottimizzare imports
- [ ] Verificare che rimangano ≤80 righe
- [ ] Test: Smoke test completo funzionalità admin

## 📊 PRIORITÀ MEDIA - SimpleVotingScreen  

### Task 7: Creare useVotingLogic hook (15')
- [ ] Creare `hooks/useVotingLogic.ts`
- [ ] Spostare useQuery per wines, users, votes
- [ ] Spostare voteMutation
- [ ] Estrarre helper functions (getWineContributor, getUserVoteForWine)

### Task 8: Estrarre WineVotingCard (15')
- [ ] Creare `components/voting/WineVotingCard.tsx`
- [ ] Spostare rendering singolo vino (righe 186-224)
- [ ] Parametrizzare props wine, vote, contributor
- [ ] Test: Verifica click per votare

### Task 9: Estrarre VotingHeader (10')
- [ ] Creare `components/voting/VotingHeader.tsx`
- [ ] Spostare header con logo e info evento (righe 117-155)
- [ ] Parametrizzare event data e navigation
- [ ] Test: Verifica navigation buttons

### Task 10: Ottimizzare SimpleVotingScreen (10')
- [ ] Aggiornare per usare hook e componenti estratti
- [ ] Verificare che rimangano ≤120 righe
- [ ] Ottimizzare imports
- [ ] Test: Verifica votazioni e real-time updates

## 📈 PRIORITÀ MEDIA - EventResultsScreen

### Task 11: Creare useResultsExport hook (15')
- [ ] Creare `hooks/useResultsExport.ts`
- [ ] Spostare logica handleExport (righe 39-79)
- [ ] Estrarre formatResults function
- [ ] Gestire Web Share API e fallbacks

### Task 12: Creare useResultsExpansion hook (10')
- [ ] Creare `hooks/useResultsExpansion.ts`
- [ ] Spostare state expandedWines e toggleExpandWine
- [ ] Semplificare gestione espansione cards
- [ ] Test: Verifica expand/collapse risultati

### Task 13: Estrarre ResultCard component (15')
- [ ] Creare `components/results/ResultCard.tsx`
- [ ] Spostare rendering singolo risultato (righe 118-218)
- [ ] Parametrizzare result, index, expanded state
- [ ] Test: Verifica visualizzazione dettagli vino

## 📝 PRIORITÀ BASSA - PagellaScreen

### Task 14: Creare usePagellaSync hook (15')
- [ ] Creare `hooks/usePagellaSync.ts`
- [ ] Spostare logiche: loadFromServer, performAutosave, polling
- [ ] Centralizzare gestione server sync
- [ ] Test: Verifica autosave e sync real-time

### Task 15: Creare usePagellaPermissions hook (10')
- [ ] Creare `hooks/usePagellaPermissions.ts`
- [ ] Spostare logica canEdit e validazione utenti
- [ ] Centralizzare controlli permessi
- [ ] Test: Verifica permessi DERO/TOMMY

## 🎯 PRIORITÀ BASSA - EventDetailsScreen

### Task 16: Estendere useEventDetails hook (10')
- [ ] Creare `hooks/useEventDetails.ts` estendendo useEventLogic
- [ ] Aggiungere logiche specifiche per details screen
- [ ] Semplificare EventDetailsScreen
- [ ] Test: Verifica logica eventi e votazioni

### Task 17: Estrarre EventWineGrid component (15')
- [ ] Creare `components/events/EventWineGrid.tsx`
- [ ] Spostare griglia vini con voting (righe 115-162)
- [ ] Parametrizzare wines, votes, handlers
- [ ] Test: Verifica voting grid e interazioni

## 🧹 TASK PULIZIA GENERALE

### Task 18: Ottimizzare imports globali (10')
- [ ] Rivedere tutti gli import nelle screens modificate
- [ ] Rimuovere import inutilizzati
- [ ] Consolidare import da stesso modulo
- [ ] Verificare tree-shaking efficace

### Task 19: Aggiornare TypeScript types (10')
- [ ] Creare types specifici per nuovi componenti
- [ ] Aggiornare interfaces esistenti se necessario
- [ ] Verificare 0 errori TypeScript
- [ ] Test: Build completo senza errori

### Task 20: Documentare nuovi moduli (15')
- [ ] Aggiungere JSDoc ai nuovi hook
- [ ] Documentare props dei nuovi componenti  
- [ ] Aggiornare README se necessario
- [ ] Creare esempi d'uso per hook complessi

## 📋 CHECKLIST FINALE

### Verifica Modularità (5')
- [ ] Ogni screen ≤150 righe (target ≤120)
- [ ] Ogni hook ≤100 righe  
- [ ] Ogni component ≤80 righe
- [ ] Separazione responsabilità chiara

### Test Funzionali (10')
- [ ] Smoke test tutte le screens modificate
- [ ] Verifica flussi critici: login, voting, admin
- [ ] Test responsive su mobile/desktop
- [ ] Verifica performance (no regressioni)

### Metriche Bundle (5')
- [ ] Build size non aumentato >5%
- [ ] Build time mantenuto <4s
- [ ] 0 errori TypeScript
- [ ] 0 warning ESLint critici

---

**STIMA TOTALE: ~4.5 ore** (20 task × 15' media)
**APPROCCIO: Incrementale, un task alla volta, test continuo**
**ROLLBACK: Ogni task è atomico, facilmente reversibile**
